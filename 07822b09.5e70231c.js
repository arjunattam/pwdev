(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{149:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,b=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return n?r.a.createElement(b,c(c({ref:t},l),{},{components:n})):r.a.createElement(b,c({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},64:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),o=(n(0),n(149)),i={id:"working-with-selectors",title:"Working with selectors"},c={unversionedId:"api/working-with-selectors",id:"api/working-with-selectors",isDocsHomePage:!1,title:"Working with selectors",description:"Selector describes an element in the page. It can be used to obtain ElementHandle (see page.$() for example) or shortcut element operations to avoid intermediate handle (see page.click() for example).",source:"@site/docs/api/working-with-selectors.md",slug:"/api/working-with-selectors",permalink:"/pwdev/docs/api/working-with-selectors",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/api/working-with-selectors.md",version:"current",sidebar:"api",previous:{title:"Environment Variables",permalink:"/pwdev/docs/api/environment-variables"},next:{title:"Working with Chrome Extensions",permalink:"/pwdev/docs/api/working-with-chrome-extensions"}},s=[],l={rightToc:s};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.a)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.a)("p",null,"Selector describes an element in the page. It can be used to obtain ",Object(o.a)("inlineCode",{parentName:"p"},"ElementHandle")," (see ",Object(o.a)("a",Object(a.a)({parentName:"p"},{href:"#pageselector"}),"page.$()")," for example) or shortcut element operations to avoid intermediate handle (see ",Object(o.a)("a",Object(a.a)({parentName:"p"},{href:"#pageclickselector-options"}),"page.click()")," for example)."),Object(o.a)("p",null,"Selector has the following format: ",Object(o.a)("inlineCode",{parentName:"p"},"engine=body [>> engine=body]*"),". Here ",Object(o.a)("inlineCode",{parentName:"p"},"engine")," is one of the supported ",Object(o.a)("a",Object(a.a)({parentName:"p"},{href:"/pwdev/docs/selectors"}),"selector engines")," (e.g. ",Object(o.a)("inlineCode",{parentName:"p"},"css")," or ",Object(o.a)("inlineCode",{parentName:"p"},"xpath"),"), and ",Object(o.a)("inlineCode",{parentName:"p"},"body")," is a selector body in the format of the particular engine. When multiple ",Object(o.a)("inlineCode",{parentName:"p"},"engine=body")," clauses are present (separated by ",Object(o.a)("inlineCode",{parentName:"p"},">>"),"), next one is queried relative to the previous one's result."),Object(o.a)("p",null,"For convenience, selectors in the wrong format are heuristically converted to the right format:"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"selector starting with ",Object(o.a)("inlineCode",{parentName:"li"},"//")," or ",Object(o.a)("inlineCode",{parentName:"li"},"..")," is assumed to be ",Object(o.a)("inlineCode",{parentName:"li"},"xpath=selector"),";"),Object(o.a)("li",{parentName:"ul"},"selector starting and ending with a quote (either ",Object(o.a)("inlineCode",{parentName:"li"},'"')," or ",Object(o.a)("inlineCode",{parentName:"li"},"'"),") is assumed to be ",Object(o.a)("inlineCode",{parentName:"li"},"text=selector"),";"),Object(o.a)("li",{parentName:"ul"},"otherwise selector is assumed to be ",Object(o.a)("inlineCode",{parentName:"li"},"css=selector"),".")),Object(o.a)("pre",null,Object(o.a)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// queries 'div' css selector\nconst handle = await page.$('css=div');\n\n// queries '//html/body/div' xpath selector\nconst handle = await page.$('xpath=//html/body/div');\n\n// queries '\"foo\"' text selector\nconst handle = await page.$('text=\"foo\"');\n\n// queries 'span' css selector inside the result of '//html/body/div' xpath selector\nconst handle = await page.$('xpath=//html/body/div >> css=span');\n\n// converted to 'css=div'\nconst handle = await page.$('div');\n\n// converted to 'xpath=//html/body/div'\nconst handle = await page.$('//html/body/div');\n\n// converted to 'text=\"foo\"'\nconst handle = await page.$('\"foo\"');\n\n// queries '../span' xpath selector starting with the result of 'div' css selector\nconst handle = await page.$('div >> ../span');\n\n// queries 'span' css selector inside the div handle\nconst handle = await divHandle.$('css=span');\n")))}p.isMDXComponent=!0}}]);